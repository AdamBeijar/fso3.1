{"version":3,"sources":["Services/phonebookService.js","Components/Filter.js","Components/PersonForm.js","Components/Persons.js","App.js","index.js"],"names":["baseURL","axios","get","newObject","post","id","delete","newNumber","patch","number","Course","props","onChange","handleFilterChange","PersonForm","onSubmit","addPerson","value","newName","handleNameChange","handleNumberChange","type","Persons","namesToShow","map","person","name","onClick","window","confirm","phonebookService","then","r","console","log","catch","error","updateErrorMessage","deleteUser","App","useState","persons","setPersons","setNewName","setNewNumber","show","setShow","message","setMessage","setErrorMessage","useEffect","response","data","filter","includes","style","backgroundColor","border","color","fontsize","Filter","event","target","preventDefault","personObject","note","setTimeout","updateNumber","find","p","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98daa596.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst baseURL = \"http://localhost:3001/persons\"\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseURL)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseURL, newObject)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(baseURL+`/${id}`)\r\n}\r\n\r\nconst updatePhoneNumber = (id, newNumber) => {\r\n    return axios.patch(baseURL+`/${id}`, {number:newNumber})\r\n}\r\nexport default {getAll, create, deletePerson, updatePhoneNumber}","import React from \"react\"\r\n\r\n\r\nconst Course = (props) => {\r\n    return (\r\n        <div>filter shown with <input onChange={props.handleFilterChange}/></div>\r\n    )\r\n}\r\n\r\nexport default Course","import React from \"react\"\r\n\r\nconst PersonForm = (props) => {\r\n    return(\r\n        <div>\r\n        <form onSubmit={props.addPerson}>\r\n            <div>\r\n                name:\r\n                <input\r\n                    value={props.newName}\r\n                    onChange={props.handleNameChange}\r\n                />\r\n                <br/>\r\n                number:\r\n                <input\r\n                    value={props.newNumber}\r\n                    onChange={props.handleNumberChange}\r\n                /></div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\nexport default PersonForm","import React from \"react\"\r\nimport phonebookService from \"../Services/phonebookService\";\r\nconst Persons = (props) => {\r\n    const deleteUser = (person) =>{\r\n        if(window.confirm(`Do you really want to Delete ${person.name}?`)){\r\n            phonebookService\r\n                .deletePerson(person.id)\r\n                .then(r=>console.log(r))\r\n                .catch(error =>{\r\n                    props.updateErrorMessage(person)\r\n                })\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            {props.namesToShow.map(person =>\r\n                    <div><p >{person.name} {person.number} <button onClick={() => deleteUser(person)}>delete</button></p></div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\nexport default Persons","import React, { useState, useEffect } from 'react'\nimport phonebookService from \"./Services/phonebookService\";\nimport Filter from \"./Components/Filter\"\nimport PersonForm from \"./Components/PersonForm\";\nimport Persons from \"./Components/Persons\";\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ show, setShow ] = useState('')\n    const [ message, setMessage ] = useState('')\n    const [ errorMessage, setErrorMessage ] = useState('')\n    const messageStyle = {\n        backgroundColor: \"lightgray\",\n        border: \"1px black solid\",\n        color: \"green\",\n        fontsize:22\n    }\n    useEffect(()=>{\n        phonebookService\n            .getAll()\n            .then(response =>{\n                console.log(response.data)\n                setPersons(response.data)\n            })\n    }, [])\n    const updateNumber = (person, newNumber) =>{\n        if(window.confirm(`${person.name} already exists, do you want to update the Phone number of ${person.name}`)){\n            phonebookService\n                .updatePhoneNumber(person.id, newNumber)\n                .then(response => setPersons(persons.map(note => note.id !== person.id ? note : response.data)))\n                .then(message =>{\n                    setMessage(`Updated ${person.name}'s phone number to ${newNumber}`)\n                    setTimeout(()=>{\n                        setMessage('')\n                    }, 2000)\n                })\n        }\n    }\n    const updateErrorMessage = (person) => {\n        setErrorMessage(`Error, information of ${person.name} has already been removed from server`)\n        setTimeout(()=>{\n            setErrorMessage('')\n        }, 2000)\n    }\n    const addPerson = (event) => {\n        event.preventDefault()\n        const personObject = {\n            name: newName, number: newNumber\n        }\n        const p = persons.map(person => person.name)\n        if(!p.includes(personObject.name)){\n            setPersons(persons.concat(personObject))\n            setNewName('')\n            setNewNumber('')\n            phonebookService\n                .create(personObject)\n                .then(response=>{console.log(response)})\n                .then(message =>{\n                    setMessage(`Added ${personObject.name}`)\n                    setTimeout(()=>{\n                        setMessage('')\n                    }, 2000)\n                })\n        } else {\n            const person = persons.find(p => p.name === newName)\n            updateNumber(person, newNumber)\n        }\n    }\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n    const handleFilterChange = (event) => {\n        setShow(event.target.value)\n    }\n    const namesToShow = persons.filter(person => person.name.includes(show))\n\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <p style={messageStyle}>{message}</p>\n            <Filter handleFilterChange={handleFilterChange}/>\n            <h2>add a new</h2>\n            <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange}/>\n            <h2>Numbers</h2>\n            <Persons key = {namesToShow} namesToShow={namesToShow} updateErrorMessage={updateErrorMessage}/>\n        </div>\n    )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}